# -*- coding: utf-8 -*-
"""BPML.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MhkQLBEAUrxLBfzDPZGfyJjKFwlVprCK
"""

import pandas as pd
import numpy as np

from google.colab import drive
drive.mount('/content/drive')

df = pd.read_csv('drive/MyDrive/bbctext.csv')
df['category'].value_counts()

df.head()

category = pd.get_dummies(df.category)
df_new = pd.concat([df, category], axis=1)
df_new = df_new.drop(columns='category')
df_new

article = df_new['text'].values
label = df_new[['sport', 'business', 'politics', 'tech', 'entertainment' ]].values

from sklearn.model_selection import train_test_split
article_train, article_test, label_train, label_test = train_test_split(article, label, test_size = 0.2 )

from tensorflow.keras.preprocessing.text import Tokenizer
from tensorflow.keras.preprocessing.sequence import pad_sequences

tokenizer = Tokenizer(num_words=3000, oov_token='x')
tokenizer.fit_on_texts(article_train)
tokenizer.fit_on_texts(article_test)

sekuens_train = tokenizer.texts_to_sequences(article_train)
sekuens_test = tokenizer.texts_to_sequences(article_test)

padded_train = pad_sequences(sekuens_train)
padded_test = pad_sequences(sekuens_test)

import tensorflow as tf

model = tf.keras.Sequential([
    tf.keras.layers.Embedding(input_dim = 3000, output_dim=16),
    tf.keras.layers.LSTM(64),
    # tf.keras.layers.Dense(128, activation='relu'),
    tf.keras.layers.Dense(64, activation='relu'),
    tf.keras.layers.Dense(5, activation='softmax')
])

model.compile(loss='categorical_crossentropy',optimizer='adam',metrics=['accuracy'])
model.summary()

class myCallback(tf.keras.callbacks.Callback):
  def on_epoch_end(self, epoch, logs={}):
    if(logs.get('val_accuracy') > 0.75):
      print('\nakurasi telah mencapai 90%')
      self.model.stop_training = True

callbacks = myCallback()

num_epochs = 30
history = model.fit(padded_train, label_train, epochs=num_epochs,
                    validation_data=(padded_test, label_test), verbose=2, callbacks=[callbacks])

import matplotlib.pyplot as plt

plt.figure(figsize=(8,5))
plt.plot(history.history['accuracy'], label='train_accuracy')
plt.plot(history.history['val_accuracy'], label='validation_accuracy')
plt.title('Model Accuracy')
plt.xlabel('Epochs')
plt.ylabel('Accuracy')
plt.legend()
plt.ylim(ymin=0, ymax=1)
plt.show()

plt.figure(figsize=(8,5))
plt.plot(history.history['loss'], label='train_loss')
plt.plot(history.history['val_loss'], label='validation_loss')
plt.title('Model Loss')
plt.xlabel('Epochs')
plt.ylabel('Loss')
plt.legend()
plt.ylim(ymin=0)
plt.show()